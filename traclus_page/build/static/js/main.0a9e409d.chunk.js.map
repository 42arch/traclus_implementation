{"version":3,"sources":["components/ArgumentsForm.js","utils.js","Map/Map.js","serviceWorker.js","index.js"],"names":["TextArea","Input","Panel","Collapse","ArgumentsForm","props","handleSubmit","e","preventDefault","form","validateFields","err","values","setState","console","log","state","showPartitionRes","loading","jsonData","data","FormData","append","axios","defaults","headers","post","then","res","partitionResObj","JSON","parse","ShowPartitionData","showClusters","epsilon","min_neighbors","clustersObj","ShowClustersData","showRepLines","min_num_trajs","min_num_trajectories","min_vertical_lines","min_prev_dist","replinesObj","ShowReplinesData","showOriginData","bind","this","getFieldValue","dataObj","ShowData","message","warning","fieldsError","getFieldDecorator","getFieldsError","getFieldError","isFieldTouched","dataError","epsilonError","minNeighborsError","minNumTrajError","minVertLinesError","minPrevDistError","onSubmit","defaultActiveKey","header","id","Item","validateStatus","help","rules","required","rows","allowClear","placement","title","placeholder","step","type","htmlType","disabled","Object","keys","some","field","showArrow","spinning","tip","shape","size","onClick","React","Component","WrappedArgumentsForm","Form","create","name","getColorByIndex","i","temp","toString","substring","length","parseInt","R","G","B","Map","showData","overlayers","forEach","ele","map","removeLayer","originalDataLayer","L","geoJSON","bindPopup","lyr","addTo","push","showPartitionData","partitionDataLayer","style","feature","color","properties","trajectory_id","showClustersData","clusterDataLayer","cluster_id","showReplinesData","replineDataLayer","overlayer","mapOptions","maxZoom","minZoom","center","initMap","setView","addBaseMap","get","gray","esri","street","baseLayer","control","layers","overLayer","jsonLayer","clusterData","className","ref","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0a9e409d.chunk.js","sourcesContent":["import { Form, Input, Button, InputNumber, Collapse, Spin, message, Tooltip } from 'antd';\r\nimport React, { Fragment } from 'react'\r\nimport axios from 'axios'\r\n\r\nfunction hasErrors(fieldsError) {\r\n  return Object.keys(fieldsError).some(field => fieldsError[field]);\r\n}\r\n\r\nconst { TextArea } = Input\r\nconst { Panel } = Collapse\r\n\r\nclass ArgumentsForm extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      values: {},\r\n      loading: false\r\n    }\r\n\r\n    this.showOriginData = this.showOriginData.bind(this)\r\n  }\r\n\r\n  componentDidMount() {\r\n    // To disable submit button at the beginning.\r\n    this.props.form.validateFields();\r\n  }\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        this.setState({\r\n          values: values\r\n        })\r\n      }\r\n    })\r\n    console.log(this.state.values)\r\n  }\r\n\r\n  showOriginData(e) {\r\n    this.setState({loading: true})\r\n    console.log('显示原始数据')\r\n    const {getFieldValue} = this.props.form\r\n    const data = getFieldValue('data')\r\n    if (typeof(data) != \"undefined\") {\r\n      const dataObj = JSON.parse(data)\r\n      this.props.ShowData(dataObj)\r\n    } else {\r\n      message.warning(\"请先输入原始数据！\")\r\n    }\r\n\r\n    this.setState({loading: false})\r\n  }\r\n  showPartitionRes = () => {\r\n    this.setState({loading: true})\r\n    let jsonData = this.state.values.data\r\n    // let epsilon = this.state.values.epsilon\r\n    let data = new FormData()\r\n    data.append('data', jsonData)\r\n    // data.append('epsilon', 11111)\r\n    console.log(data)\r\n    axios.defaults.headers.post['Content-Type'] = 'application/json'\r\n    axios.post('http://127.0.0.1:5000/api/partitions/', data, {headers: {'Access-Control-Allow-Origin': '*'}}).then(\r\n      res => {\r\n        let partitionResObj = JSON.parse(res.data)\r\n        console.log(partitionResObj)\r\n        this.props.ShowPartitionData(partitionResObj)\r\n        this.setState({loading: false})\r\n      }\r\n    )\r\n  }\r\n  showClusters = () => {\r\n    console.log('显示聚类结果')\r\n    this.setState({loading: true})\r\n    let jsonData = this.state.values.data\r\n    let epsilon = this.state.values.epsilon\r\n    let min_neighbors = this.state.values.min_neighbors\r\n    let data = new FormData()\r\n    data.append('data', jsonData)\r\n    data.append('epsilon', epsilon)\r\n    data.append('min_neighbors', min_neighbors)\r\n    axios.post('http://127.0.0.1:5000/api/clusters/', data).then(\r\n      res => {\r\n        let clustersObj = JSON.parse(res.data)\r\n        console.log(clustersObj)\r\n        this.props.ShowClustersData(clustersObj)\r\n        this.setState({loading: false})\r\n      }\r\n    )\r\n  }\r\n\r\n  showRepLines = () => {\r\n    console.log(\"显示代表性轨迹\")\r\n    this.setState({loading:true})\r\n    let jsonData = this.state.values.data\r\n    let epsilon = this.state.values.epsilon\r\n    let min_neighbors = this.state.values.min_neighbors\r\n    let min_num_trajs = this.state.values.min_num_trajectories\r\n    let min_vertical_lines = this.state.values.min_vertical_lines\r\n    let min_prev_dist = this.state.values.min_prev_dist\r\n    let data = new FormData()\r\n    data.append('data', jsonData)\r\n    data.append('epsilon', epsilon)\r\n    data.append('min_neighbors', min_neighbors)\r\n    data.append('min_num_trajectories_in_cluster', min_num_trajs)\r\n    data.append('min_vertical_lines', min_vertical_lines)\r\n    data.append('min_prev_dist', min_prev_dist)\r\n    axios.post('http://127.0.0.1:5000/api/rep_lines/', data).then(\r\n      res => {\r\n        let replinesObj = JSON.parse(res.data)\r\n        console.log(replinesObj)\r\n        this.props.ShowReplinesData(replinesObj)\r\n        this.setState({loading: false})\r\n      }\r\n    )\r\n  }\r\n\r\n\r\n  render() {\r\n    const { getFieldDecorator, getFieldsError, getFieldError, isFieldTouched } = this.props.form;\r\n\r\n    // Only show error after a field is touched.\r\n    const dataError = isFieldTouched('data') && getFieldError('data')\r\n    const epsilonError = isFieldTouched('epsilon') && getFieldError('epsilon')\r\n    const minNeighborsError = isFieldTouched('min_neighbors') && getFieldError('min_neighbors')\r\n    const minNumTrajError = isFieldTouched('min_num_trajectories') && getFieldError('min_num_trajectories')\r\n    const minVertLinesError = isFieldTouched('min_vertical_lines') && getFieldError('min_vertical_lines')\r\n    const minPrevDistError = isFieldTouched('min_prev_dist') && getFieldError('min_prev_dist')\r\n\r\n    return (\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <Collapse defaultActiveKey={['2']}>\r\n            <Panel header=\"输入原始数据\" id=\"dataPanel\">\r\n              <Form.Item validateStatus={dataError ? 'error' : ''} help={dataError || ''}>\r\n                {getFieldDecorator('data', {\r\n                  rules: [{ required: true, message: '请输入Geojson数据!' }],\r\n                })(\r\n                  <TextArea rows={5} allowClear/>\r\n                )}\r\n              </Form.Item>\r\n            </Panel>\r\n            <Panel header=\"输入算法参数\" id='argumentsPanel'>\r\n              <Form.Item validateStatus={epsilonError ? 'error' : ''} help={epsilonError || ''}>\r\n                <Tooltip placement=\"bottomLeft\" title=\"epsilon参数\">\r\n                epsilon:\r\n                </Tooltip>\r\n              \r\n                {getFieldDecorator('epsilon', {\r\n                  rules: [{ required: true, message: '请输入参数epsilon!' }],\r\n                })(\r\n                  <InputNumber placeholder=\"epsilon\" step={0.01}/>,\r\n                )}\r\n              </Form.Item>\r\n              <Form.Item validateStatus={minNeighborsError ? 'error' : ''} help={minNeighborsError || ''}>\r\n                min_neighbors:\r\n                {getFieldDecorator('min_neighbors', {\r\n                  rules: [{ required: true, message: '请输入参数min_neighbors!' }],\r\n                })(\r\n                  <InputNumber placeholder=\"min_neighbors\" />,\r\n                )}\r\n              </Form.Item>\r\n              <Form.Item validateStatus={minNumTrajError ? 'error' : ''} help={minNumTrajError || ''}>\r\n                min_num_trajectories_in_cluster:\r\n                {getFieldDecorator('min_num_trajectories', {\r\n                  rules: [{ required: true, message: '请输入参数min_num_trajectories!' }],\r\n                })(\r\n                  <InputNumber placeholder=\"min_num_trajectories_in_cluster\"/>,\r\n                )}\r\n              </Form.Item>\r\n              <Form.Item validateStatus={minVertLinesError ? 'error' : ''} help={minVertLinesError || ''}>\r\n                min_vertical_lines:\r\n                {getFieldDecorator('min_vertical_lines', {\r\n                  rules: [{ required: true, message: '请输入参数min_vertical_lines!' }],\r\n                })(\r\n                  <InputNumber placeholder=\"min_vertical_lines\"/>,\r\n                )}\r\n              </Form.Item>\r\n              <Form.Item validateStatus={minPrevDistError ? 'error' : ''} help={minPrevDistError || ''}>\r\n                min_prev_dist:\r\n                {getFieldDecorator('min_prev_dist', {\r\n                  rules: [{ required: true, message: 'min_prev_dist!' }],\r\n                })(\r\n                  <InputNumber placeholder=\"min_prev_dist\" step={0.01}/>,\r\n                )}\r\n              </Form.Item>\r\n              \r\n              <Button id=\"confirmButton\" type=\"primary\" htmlType=\"submit\" disabled={hasErrors(getFieldsError())}>\r\n                确认\r\n              </Button>\r\n            </Panel>\r\n            <Panel showArrow={false} header=\"       计算与显示\">\r\n            <Form.Item>\r\n              <Spin spinning={this.state.loading} tip=\"加载数据中\" id=\"handleContainer\">\r\n                <Button id=\"handleButton\" shape=\"round\" type=\"primary\" size=\"default\"\r\n                  onClick={this.showOriginData}>显示原始数据</Button>\r\n                <Button id=\"handleButton\" shape=\"round\" type=\"primary\" size=\"default\"\r\n                  onClick={this.showPartitionRes}>获取显示分段结果</Button>\r\n                <Button id=\"handleButton\" shape=\"round\" type=\"primary\" size=\"default\"\r\n                  onClick={this.showClusters}>获取显示聚类结果</Button>\r\n                <Button id=\"handleButton\" shape=\"round\" type=\"primary\" size=\"default\"\r\n                  onClick={this.showRepLines}>获取显示代表性轨迹</Button>\r\n              </Spin>\r\n\r\n            </Form.Item>\r\n            </Panel>\r\n\r\n          </Collapse>\r\n        </Form>\r\n    );\r\n  }\r\n}\r\n\r\nconst WrappedArgumentsForm = Form.create({ name: 'horizontal_login' })(ArgumentsForm);\r\nexport default WrappedArgumentsForm\r\n\r\n// ReactDOM.render(<WrappedHorizontalLoginForm />, mountNode);","// function getColorByIndex(index) {\r\n//   return 'rgb(' + Math.floor(255 - 42.5 * index) + ', 42.5 , 0)'  \r\n// }\r\n\r\nfunction getColorByIndex(i){\r\n  if(i<10)i=i*302.3;\r\n  if(i<100)i=i*31.2;\r\n  for(;i>255;i*=0.98);\r\n  var temp=i.toString().substring(i.toString().length-3);\r\n  i+=parseInt(temp);\r\n  for(;i>255;i-=255);\r\n  i=parseInt(i);\r\n  if(i<10)i+=10;\r\n\r\n  var R=i*(i/100);\r\n  for(;R>255;R-=255);\r\n  if(R<50)R+=60;\r\n  R=parseInt(R).toString(16);\r\n\r\n  var G=i*(i%100);\r\n  for(;G>255;G-=255);\r\n  if(G<50)G+=60;\r\n  G=parseInt(G).toString(16);\r\n\r\n  var B=i*(i%10);\r\n  for(;B>255;B-=255);\r\n  if(B<50)B+=60;\r\n  B=parseInt(B).toString(16);\r\n\r\n  return \"#\"+R+G+B;\r\n}\r\n\r\n\r\n\r\nfunction getRandomColor() {\r\n  const rgb = []\r\n  for (let i = 0 ; i < 3; ++i){\r\n    let color = Math.floor(Math.random() * 256).toString(16)\r\n    color = color.length === 1 ? '0' + color : color\r\n    rgb.push(color)\r\n  }\r\n  return '#' + rgb.join('')\r\n}\r\n\r\n// 判断是否是Json字符串\r\nfunction isJson(str) {\r\n  if (typeof str == 'string') {\r\n    try {\r\n        const obj=JSON.parse(str);\r\n        if(typeof obj == 'object' && obj ){\r\n            return true;\r\n        }else{\r\n            return false;\r\n        }\r\n\r\n    } catch(e) {\r\n        console.log('error：'+str+'!!!'+e);\r\n        return false;\r\n    }\r\n}\r\nconsole.log('It is not a string!')\r\n}\r\n\r\nexport {getColorByIndex, getRandomColor, isJson}","import React, { Component, Fragment } from 'react'\r\nimport L from 'leaflet'\r\nimport * as esri from 'esri-leaflet'\r\nimport {Button, Icon, Input} from 'antd'\r\nimport axios from 'axios'\r\nimport './Map.css'\r\nimport WrappedArgumentsForm from \"../components/ArgumentsForm\";\r\n\r\nimport partitionData from '../static/partition_result_test.json'\r\nimport clusterData from '../static/clustering_result.json'\r\nimport shipData from '../static/ship/aistype_2.json'\r\nimport shipClusterData from '../static/ship/ship_data_cluster.json'\r\nimport shipRepLineData from '../static/ship/ship_data_rep_line.json'\r\n\r\nimport {getColorByIndex, getRandomColor} from '../utils'\r\n\r\nclass Map extends Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      data: {}\r\n    }\r\n    this.map = null\r\n    this.overlayer = null\r\n    this.overlayers = []\r\n    this.mapOptions = {maxZoom: 20, minZoom:3, center:[0, 0]}\r\n    // this.getOriginalData = this.getOriginalData.bind(this)\r\n    // this.getClusterData = this.getClusterData.bind(this)\r\n    // this.getReplineData = this.getReplineData.bind(this)\r\n  }\r\n  componentDidMount() {\r\n    this.initMap()\r\n  }\r\n\r\n  initMap() {\r\n    this.map = L.map('mapDiv', this.mapOptions).setView([50, 0], 7)\r\n    // 英国位置  [55, 0]  7\r\n    this.addBaseMap()\r\n  }\r\n\r\n  getTestApiData() {\r\n    axios.get('http://127.0.0.1:5000/test').then(res => console.log(res.data))\r\n  }\r\n\r\n  async addBaseMap() {\r\n    // const base = await esri.tiledMapLayer({\r\n    //   url: 'http://map.geoq.cn/ArcGIS/rest/services/ChinaOnlineCommunity/MapServer'\r\n    // }).addTo(this.map)\r\n    const gray = esri.basemapLayer('DarkGray')\r\n    const street = esri.basemapLayer('Streets').addTo(this.map)\r\n    this.baseLayer = {\r\n      // '基础地图': base,\r\n      '暗色地图': gray,\r\n      '街道地图': street\r\n    }\r\n    L.control.layers(this.baseLayer, this.overLayer).addTo(this.map)\r\n  }\r\n\r\n  addJsonLayer() {\r\n    // const style = {'color': 'red', 'weight': 1, 'opacity': 0.8}\r\n    // {color: 'rgb(170, 42.5 , 0)'\r\n    const jsonLayer = L.geoJSON(clusterData, {style: function(feature) { return {color: getColorByIndex(feature.properties.cluster_id)}}})\r\n\r\n    jsonLayer.bindPopup(lyr => {\r\n      return `<h3>信息</h3>\r\n        <p>trajectory_id: ${lyr.feature.properties.trajectory_id}</p>\r\n        <p>cluster_id: ${lyr.feature.properties.cluster_id}</p>`\r\n    }).addTo(this.map)\r\n\r\n    this.overLayer = {\r\n      '测试数据': jsonLayer\r\n    }\r\n  }\r\n  // getOriginalData(e) {\r\n  //   console.log('获取原始数据')\r\n  //   const style = {'weight': 1, 'opacity': 1}\r\n  //   this.overlayers.forEach(ele => this.map.removeLayer(ele))\r\n  //   const originalDataLayer = L.geoJSON(shipData, style)\r\n  //   originalDataLayer.bindPopup(lyr => {\r\n  //     return `<h3>详细信息</h3>`\r\n  //   }).addTo(this.map)\r\n  //   this.overlayers.push(originalDataLayer)\r\n  // }\r\n  showData = (data) => {\r\n    const style = {'weight': 1, 'opacity': 1}\r\n    this.overlayers.forEach(ele => this.map.removeLayer(ele))\r\n    const originalDataLayer = L.geoJSON(data, style)\r\n    originalDataLayer.bindPopup(lyr => {\r\n      return `<h3>详细信息</h3>\r\n        <p>shipInfo：</p>`\r\n    }).addTo(this.map)\r\n    this.overlayers.push(originalDataLayer)\r\n  }\r\n\r\n  showPartitionData = (data) => {\r\n    console.log('显示分段数据')\r\n    const style = {}\r\n    this.overlayers.forEach(ele => this.map.removeLayer(ele))\r\n    const partitionDataLayer = L.geoJSON(data, {style: function(feature) { return { \r\n      color: getColorByIndex(feature.properties.trajectory_id),\r\n      'weight': 1, 'opacity': 1\r\n    }}})\r\n    partitionDataLayer.bindPopup(lyr => {\r\n      return `<h3>详细信息</h3>\r\n        <p>trajectory_id: ${lyr.feature.properties.trajectory_id}</p>`\r\n    }).addTo(this.map)\r\n    this.overlayers.push(partitionDataLayer)\r\n  }\r\n\r\n  // getClusterData(e) {\r\n  //   console.log('显示聚类结果数据')\r\n  //   const style = {'weight': 1, 'opacity': 0.8}\r\n  //   this.overlayers.forEach(ele => this.map.removeLayer(ele))\r\n  //   const clusterDataLayer = L.geoJSON(shipClusterData, {style: function(feature) { return {\r\n  //     color: getColorByIndex(feature.properties.cluster_id),\r\n  //     'weight': 1, 'opacity': 1\r\n  //   }}})\r\n  //   clusterDataLayer.bindPopup(lyr => {\r\n  //     return `<h3>详细信息</h3>\r\n  //       <p>trajectory_id: ${lyr.feature.properties.trajectory_id}</p>\r\n  //       <p>cluster_id: ${lyr.feature.properties.cluster_id}</p>`\r\n  //   }).addTo(this.map)\r\n  //   this.overlayers.push(clusterDataLayer)\r\n  // }\r\n\r\n  showClustersData = (data) => {\r\n    console.log('显示聚类数据')\r\n    const style = {'weight': 1, 'opacity': 0.8}\r\n    this.overlayers.forEach(ele => this.map.removeLayer(ele))\r\n    const clusterDataLayer = L.geoJSON(data, {style: function(feature) { return {\r\n      color: getColorByIndex(feature.properties.cluster_id),\r\n      'weight': 1, 'opacity': 1\r\n    }}})\r\n    clusterDataLayer.bindPopup(lyr => {\r\n      return `<h3>详细信息</h3>\r\n        <p>trajectory_id: ${lyr.feature.properties.trajectory_id}</p>\r\n        <p>cluster_id: ${lyr.feature.properties.cluster_id}</p>`\r\n    }).addTo(this.map)\r\n    this.overlayers.push(clusterDataLayer)\r\n  }\r\n\r\n  // getReplineData(e) {\r\n  //   console.log('显示代表性轨迹数据')\r\n  //   const style = {'color': 'yellow', 'weight': 2, 'opacity': 1}\r\n  //   // this.overlayers.forEach(ele => this.map.removeLayer(ele))\r\n  //   const replineDataLayer = L.geoJSON(shipRepLineData, style)\r\n  //   replineDataLayer.bindPopup(lyr => {\r\n  //     return `<h3>详细信息</h3>`\r\n  //   }).addTo(this.map)\r\n  //   this.overlayers.push(replineDataLayer)\r\n  // }\r\n\r\n  showReplinesData = (data) => {\r\n    const style = {'color': 'yellow', 'weight': 2, 'opacity': 1}\r\n    const replineDataLayer = L.geoJSON(data, style)\r\n    replineDataLayer.bindPopup(lyr => {\r\n      return `<h3>详细信息</h3>`\r\n    }).addTo(this.map)\r\n    this.overlayers.push(replineDataLayer)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <div className=\"map\" id=\"map\">\r\n          <div className=\"mapDiv\" id=\"mapDiv\"></div>\r\n          <div className=\"handleDiv\" id=\"handleDiv\">\r\n            <h3>轨迹聚类计算</h3>\r\n            <WrappedArgumentsForm ref=\"argumentDiv\" \r\n              ShowData={this.showData}\r\n              ShowPartitionData={this.showPartitionData}\r\n              ShowClustersData={this.showClustersData}\r\n              ShowReplinesData={this.showReplinesData}>  \r\n            </WrappedArgumentsForm>\r\n          </div>\r\n        </div>\r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default Map","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Map from './Map/Map';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Map />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}